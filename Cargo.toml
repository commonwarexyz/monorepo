[workspace]
members = [
    "consensus",
    "cryptography",
    "macros",
    "p2p",
    "runtime",
    "storage",
    "utils",
    "examples/chat",
    "examples/log",
    "examples/vrf",
]
resolver = "2"

[workspace.dependencies]
commonware-consensus = { version = "0.0.3", path = "consensus" }
commonware-cryptography = { version = "0.0.14", path = "cryptography" }
commonware-macros = { version = "0.0.5", path = "macros" }
commonware-p2p = { version = "0.0.25", path = "p2p" }
commonware-runtime = { version = "0.0.11", path = "runtime" }
commonware-storage = { version = "0.0.6", path = "storage" }
commonware-stream = { version = "0.0.3", path = "stream" }
commonware-utils = { version = "0.0.6", path = "utils" }
thiserror = "1.0.63"
bytes = "1.7.1"
sha2 = "0.10.8"
rand = "0.8.5"
rand_distr = "0.4.3"
futures = "0.3.30"
futures-util = "0.3.30"
tokio = "1.40.0"
tracing = "0.1.40"
tracing-subscriber = "0.3.18"
prost = "0.13.2"
prost-build = "0.13.2"
governor = "0.6.3"
prometheus-client = "0.22.3"
clap = "4.5.18"
criterion = "0.5.1"
zstd = "0.13.2"
chrono = "0.4.39"
ratatui = "0.27.0"
crossterm = "0.28.1"
serde_json = "1.0.122"

[profile.bench]
# Because we enable overflow checks in "release," we should benchmark with them.
overflow-checks = true

[profile.dev]
# Although overflow checks are enabled by default in "dev", we explicitly
# enable them here for clarity.
overflow-checks = true

[profile.release]
# To guard against unexpected behavior in production, we enable overflow checks in
# "release" although they incur some performance penalty.
overflow-checks = true

[profile.test]
# Although overflow checks are enabled by default in "test", we explicitly
# enable them here for clarity.
overflow-checks = true
