name: 'Setup'
runs:
  using: 'composite'
  steps:
    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.9
    - name: Configure sccache
      shell: bash
      run: |
        echo "RUSTC_WRAPPER=sccache" >> "$GITHUB_ENV"
        echo "SCCACHE_GHA_ENABLED=true" >> "$GITHUB_ENV"
        echo "SCCACHE_CACHE_SIZE=6G" >> "$GITHUB_ENV"
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/AppData/Local/cargo/registry
          ~/AppData/Local/cargo/git
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    - name: Get Rust version
      id: rust-version
      shell: bash
      run: echo "rust_version=$(rustc --version)" >> "$GITHUB_OUTPUT"
    - name: Cache cargo-cache
      id: cargo-cache-cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/cargo-cache
          ~/AppData/Local/cargo/bin/cargo-cache.exe
        key: ${{ runner.os }}-cargo-cache-${{ steps.rust-version.outputs.rust_version }}
    - name: Install cargo-cache if not cached
      if: steps.cargo-cache-cache.outputs.cache-hit != 'true'
      shell: bash
      run: cargo install cargo-cache
    - name: Maintain cargo cache
      shell: bash
      run: |
        if command -v cargo-cache &> /dev/null; then
          cargo cache --autoclean
        fi
