name: Publish 

on:
  push:
    branches: [ "main" ]

jobs:
  All:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Get Rust version
      id: rust-version
      run: echo "rust_version=$(rustc --version)" >> "$GITHUB_OUTPUT"
    - name: Run setup
      uses: ./.github/actions/setup
      with:
        rust-version: ${{ steps.rust-version.outputs.rust_version}}
    - name: Publish macros 
      run: cargo publish --manifest-path macros/Cargo.toml
      continue-on-error: true
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    - name: Publish utils 
      run: cargo publish --manifest-path utils/Cargo.toml
      continue-on-error: true
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    - name: Publish cryptography 
      run: cargo publish --manifest-path cryptography/Cargo.toml
      continue-on-error: true
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    - name: Publish runtime 
      run: cargo publish --manifest-path runtime/Cargo.toml
      continue-on-error: true
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    - name: Publish storage
      run: cargo publish --manifest-path storage/Cargo.toml
      continue-on-error: true
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    - name: Publish p2p
      run: cargo publish --manifest-path p2p/Cargo.toml
      continue-on-error: true
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    - name: Publish chat
      run: cargo publish --manifest-path examples/chat/Cargo.toml
      continue-on-error: true
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    - name: Publish vrf 
      run: cargo publish --manifest-path examples/vrf/Cargo.toml
      continue-on-error: true
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
