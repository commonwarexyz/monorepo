syntax = "proto3";
package wire;

message Consensus {
    oneof payload {
        Proposal proposal = 1;
        Vote vote = 2;
        Notarization notarization = 3;
        Finalize finalize = 4;  
        Finalization finalization = 5;
    }
}

message Activity {
    repeated Vote votes = 1;
    repeated Finalize finalizes = 2;
    repeated Fault faults = 3;
}

message Proposal {
    uint64 view = 1;

    // Header
    uint64 height = 2;
    bytes parent = 3;
    optional Activity activity = 4;

    // Application
    bytes payload = 5;

    Signature signature = 6;
}

message Vote {
    uint64 view = 1;
    optional uint64 height = 2;
    optional bytes hash = 3; 

    Signature signature = 4;
}

message Notarization {
    uint64 view = 1;
    optional uint64 height = 2;
    optional bytes hash = 3;
    
    repeated Signature signatures = 4;
}

message Finalize {
    uint64 view = 1;
    uint64 height = 2;
    bytes hash = 3;

    Signature signature = 4;
}

message Finalization {
    uint64 view = 1;
    uint64 height = 2;
    bytes hash = 3;

    repeated Signature signatures = 4;
}

message Signature {
    bytes public_key = 1;
    bytes signature = 2;
}

message Backfill {
    oneof payload {
        Request request = 1;
        Resolution resolution = 2;
        Missing missing = 3;
    }
}
message Request {
    bytes hash = 1;
    uint64 parents = 2;
}

message Resolution {
    repeated Proposal proposals = 1;
}

message Missing {
    bytes hash = 1;
}

// TODO: only store one fault per public key per view to avoid DoS
message Fault {
    oneof payload {
        ConflictingProposal conflicting_proposal = 1;
        ConflictingVote conflicting_vote = 2;
        ConflictingFinalize conflicting_finalize = 3;
        NullFinalize null_finalize = 4;
    }
}

message ConflictingProposal {
    uint64 view = 1;

    bytes header_hash_1 = 2;
    bytes payload_hash_1 = 3;
    Signature signature_1 = 4;

    bytes header_hash_2 = 5;
    bytes payload_hash_2 = 6;
    Signature signature_2 = 7;
}

message ConflictingVote {
    uint64 view = 1;

    uint64 height_1 = 2;
    bytes hash_1 = 3;
    Signature signature_1 = 4;

    uint64 height_2 = 5;
    bytes hash_2 = 6;
    Signature signature_2 = 7;
}

message ConflictingFinalize {
    uint64 view = 1;

    uint64 height_1 = 2;
    bytes hash_1 = 3;
    Signature signature_1 = 4;

    uint64 height_2 = 5;
    bytes hash_2 = 6;
    Signature signature_2 = 7;
}

message NullFinalize {
    uint64 view = 1;

    uint64 height = 2;
    bytes hash = 3;
    Signature signature_finalize = 4;

    Signature signature_null = 5;
}