syntax = "proto3";
package wire;

// Car is a message generated by a sequencer that is broadcasted to all participants.
// The hash of the car is referred to as the plate.
message Car {
    // Public key of the sequencer
    bytes sequencer = 1;

    // Sequencer-specific sequential index
    uint64 index = 2;

    // View number
    uint64 view = 3;

    // Payload data
    bytes payload = 4;

    // Hash of the previous car that has `index` of `this.index-1`
    bytes parent_plate = 5;

    // Threshold signature of the parent car
    bytes parent_threshold = 6;

    // Signature of the sequencer over the hash of the car
    bytes signature = 7;
}

// Ack is a message sent by a validator to acknowledge the receipt of a Car.
message Ack {
    bytes plate = 1;

    bytes public_key = 2;
    bytes signature = 3;
}

// Proof is a combination of a car and its threshold signature.
// The threshold signature is constructed by a quorum of Acks.
message Proof {
    Car car = 1;
    bytes threshold = 2;
}

// Backfill is a request for a Proof.
message Backfill {
    bytes public_key = 1;
    repeated uint64 indexes = 2;
}
