syntax = "proto3";
package wire;


// Chunk is a message generated by a sequencer that is broadcasted to all signers.
message Chunk {
    // Public key of the sequencer
    bytes sequencer = 1;

    // Sequencer-specific sequential index
    uint64 height = 2;

    // Payload digest of the Chunk
    bytes payload = 3;
}

// Parent is a message that contains information about the parent (previous height) of a Chunk.
//
// The sequencer and height are not provided as they are implied by the sequencer and height of the current chunk.
message Parent {
    // Payload digest of the parent
    bytes payload = 1;

    // Epoch of the validator set
    uint64 epoch = 2;

    // Threshold signature over the parent
    bytes threshold = 3;
}

// Node is a message from a sequencer that contains a Chunk and a proof that the parent was correctly broadcasted.
// It represents a newly-proposed tip of the chain for the given sequencer.
message Node {
    // Chunk that is being broadcasted
    Chunk chunk = 1;

    // Signature of the sequencer over the chunk
    bytes signature = 2;

    // Information about the parent chunk
    //
    // This part is not signed over, but it is used to verify that the previous chunk in the chain was correctly broadcast. 
    optional Parent parent = 3;
}

// Ack is a message sent by a signer to acknowledge the receipt of a Chunk.
message Ack {
    // Chunk that is being acknowledged
    Chunk chunk = 1;

    // Epoch of the validator set
    uint64 epoch = 2;

    // Partial signature of the signer over the chunk and epoch
    bytes partial = 3;
}
