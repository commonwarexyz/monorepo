syntax = "proto3";
package wire;

// Chunk is a message generated by a sequencer that is broadcasted to all participants.
message Chunk {
    // Public key of the sequencer
    bytes sequencer = 1;

    // Sequencer-specific sequential index
    uint64 index = 2;

    // Payload data
    bytes payload = 3;

    // Digest previous Chunk that has `index` of `this.index-1`
    bytes parent_digest = 4;

    // Threshold signature of the parent Chunk
    bytes parent_threshold = 5;

    // Signature of the sequencer over the hash of the Chunk
    bytes signature = 6;
}

// Ack is a message sent by a validator to acknowledge the receipt of a Chunk.
message Ack {
    // Public key of the sequencer
    bytes sequencer = 1;

    // Sequencer-specific sequential index
    uint64 index = 2;

    // Digest of the Chunk being acknowledged
    bytes digest = 3;

    // Validator's public key
    bytes public_key = 4;

    // Signature of the validator over the hash of the Chunk
    bytes signature = 5;
}
